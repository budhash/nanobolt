---
name: CI

on:
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - 'main'

permissions:
  checks: write
  pull-requests: write

concurrency:
  group: build-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  check-commit:
    runs-on: ubuntu-latest
    outputs:
      skip: ${{ steps.check-commit.outputs.skip }}

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: check if message contain keywords ace scopeid
        id: check-commit
        run: |
          # checking for "[docs]" or "[skip]" messages
          message=$(git log -1 --pretty=format:'%s')
          if [[ "$message" =~ "(\[doc\])|(\[minor\])|(\[skip\])" ]]; then
            echo "Skipping tests due to [doc], [minor], or [skip] message"
            echo "::set-output name=skip::true"
          fi

  validate:
    timeout-minutes: 45
    defaults:
      run:
        shell: bash
    needs: check-commit
    if: ${{ needs.check-commit.outputs.skip != 'true' }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.9", "3.10"]
    outputs:
      matrix: ${{ steps.read-metadata.outputs.matrix }}
    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python-version }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Read Metadata and Generate Matrix
        id: read-metadata
        run: |
          json=$(make matrix)
          echo "::set-output name=matrix::$json"

      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install - dependencies
        run: |
          make setup

      - name: Check - if tests exist
        id: has_tests
        uses: andstor/file-existence-action@v2
        with:
          files: "tests"

      - name: Test - execute ${{ matrix.index }}
        if: steps.has_tests.outputs.files_exists == 'true'
        run: |
          make tests

      - name: Test - publish results ${{ matrix.index }}
        uses: EnricoMi/publish-unit-test-result-action/composite@v2
        with:
          check_name: Test Results ${{ matrix.index }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          junit_files: output/report/test/junit.xml
          comment_mode: "off"

      - name: Build - package
        run: |
          make package
