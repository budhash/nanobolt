---
name: CI

on:
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - 'main'

concurrency:
  group: build-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  pre-checks:
    runs-on: ubuntu-latest
    outputs:
      skip: ${{ steps.check-commit.outputs.skip }}
      matrix: ${{ steps.read-metadata.outputs.matrix }}

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Check - commit message
        id: check-commit
        run: |
          # checking for "[docs]" or "[skip]" messages
          message=$(git log -1 --pretty=format:'%s')
          if [[ "$message" =~ "(\[doc\])|(\[minor\])|(\[skip\])" ]]; then
            echo "Skipping tests due to [doc], [minor], or [skip] message"
            echo "skip=true" >> $GITHUB_OUTPUT
          else
            echo "skip=false" >> $GITHUB_OUTPUT
          fi

      - name: Load - matrix grid
        id: read-metadata
        run: |
          # {"grid": [{"os": "ubuntu-latest", "python-version": "3.9"}, {"os": "ubuntu-latest", "python-version": "3.10"}]}
          matrix=$(make matrix)
          echo "matrix=$matrix" >> $GITHUB_OUTPUT

  validate:
    timeout-minutes: 45
    defaults:
      run:
        shell: bash
    needs: pre-checks
    if: ${{ needs.check-commit.outputs.skip != 'true' }}
    runs-on: ${{ matrix.grid.os }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.pre-checks.outputs.matrix) }}
    env:
      OS: ${{ matrix.grid.os }}
      PYTHON: ${{ matrix.grid.python-version }}

    steps:
      - name: Debug
        run: |
          echo "os : ${{ matrix.grid.os }}"
          echo "python : ${{ matrix.grid.python-version }}"
          echo "index : ${{ matrix.grid.os }}-${{ matrix.grid.python-version }}"

      - name: Checkout - code
        uses: actions/checkout@v3

      - name: Install - python ${{ matrix.grid.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.grid.python-version }}

      - name: Install - dependencies
        run: |
          make setup

      - name: Check - if tests exist
        id: has_tests
        uses: andstor/file-existence-action@v2
        with:
          files: "tests"

      - name: Test - execute ${{ matrix.index }}
        if: steps.has_tests.outputs.files_exists == 'true'
        run: |
          make tests

      - name: Test - upload results ${{ matrix.index }}
        if: steps.has_tests.outputs.files_exists == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: test-results-${{ matrix.grid.os }}-${{ matrix.grid.python-version }}
          path: output/report/test/junit.xml

      - name: Build - package
        run: |
          make package

  publish-test-results:
    name: publish-test-results
    needs: validate
    # the build-and-test job might be skipped, we don't need to run this job then
    if: success() || failure()
    runs-on: ubuntu-latest
    permissions:
      checks: write
      # only needed unless run with comment_mode: off
      pull-requests: write
      # only needed for private repository
      contents: read
      # only needed for private repository
      issues: read

    steps:
      - name: Test - download results
        uses: actions/download-artifact@v3
        with:
          path: test-results

      - name: Publish - test results
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          check_name: Test Results
          github_token: ${{ secrets.GITHUB_TOKEN }}
          junit_files: test-results/**/*.xml
          comment_mode: "always"
